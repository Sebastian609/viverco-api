[phases.setup]
nixpkgs = [
  "php", 
  "phpPackages.composer", 
  "mysql", 
  "nodejs", 
  "npm", 
  "python311Packages.supervisor", 
  "nginx", 
  "php81Packages.php-fpm"
]

[phases.install]
cmds = [
  "composer install --no-dev --optimize-autoloader",
  "npm install && npm run build"
]

[phases.build]
cmds = [
  "php artisan config:clear",
  "php artisan route:clear",
  "php artisan view:clear",
  "php artisan config:cache",
  "php artisan route:cache",
  "php artisan view:cache",
  "php artisan migrate --force",
  "mkdir -p /etc/supervisor/conf.d/",
  "cp /assets/worker-*.conf /etc/supervisor/conf.d/",
  "cp /assets/supervisord.conf /etc/supervisord.conf",
  "chmod +x /assets/start.sh"
]

[start]
cmd = "/assets/start.sh"

[env]
APP_ENV = "production"
APP_DEBUG = "false"
SESSION_SECURE_COOKIE = "true"
NIXPACKS_PHP_ROOT_DIR = "public"
NIXPACKS_PHP_FALLBACK_PATH = "/index.php"

[staticAssets]
"start.sh" = '''
#!/bin/bash

# Transforma la config nginx con plantilla (usando prestart.mjs si lo necesitas)
node /assets/scripts/prestart.mjs /assets/nginx.template.conf /etc/nginx.conf

# Asegura permisos correctos (importante para Laravel)
chown -R www-data:www-data /app
chmod -R 775 /app/storage /app/bootstrap/cache

# Inicia supervisord con configuraci√≥n de servicios
supervisord -c /etc/supervisord.conf -n
'''

# (El resto de assets ya los tienes: supervisord.conf, worker-laravel.conf, worker-phpfpm.conf, worker-nginx.conf, php-fpm.conf, nginx.template.conf)
